n,m = map(int,input().split())

if n == 1:
    print(1)
elif n == 2:
    print(min(4,(m-1)//2+1))
elif m <= 6:
    print(min(4,m))
else:
    print(m-2)
    
'''
병든나이트는 이동 시, 무조건 오른쪽으로는 이동을 하게 되어있고, 
위 아래로는 자유인 상황이다.

1. 세로나 가로의 길이가 1이라면 시작 칸 밖에 방문하지 못한다.

2. 세로의 길이가 2일 경우, 선택권은 2,3 방법 밖에 없다. 
( 세로로 한칸씩만 움직이는 방법 )
이 때는, 가로의 길이가 아무리 길어도 4번이상 움직이지 못하므로, 
최댓값은 4가 될 것이다.

3. 가로의 길이가 6이하일 경우에, 4번 이상으로 움직인다고 하면, 
1~4번 방법을 모두 써야 하므로 최댓값은 4가 될 것이고, 
최소값은 자신 가로의 길이가 될 것이다.

4. 세로의 길이가 3 이상이고, 가로의 길이가 7이상인 경우에는 
이동에 제약이 없으므로 오른쪽으로 두 칸을 가야만 하는 강제적인 방법을 빼고는 
한칸씩만 움직이면 되므로 m-2 라는 값이 나오게 된다.
'''